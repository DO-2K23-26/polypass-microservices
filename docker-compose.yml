version: '3.8'

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - polypass-network

  kafka-topics:
    image: apache/kafka:latest
    container_name: kafka-topics
    depends_on:
      - kafka
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...';
        while ! nc -z kafka 29092; do
          echo 'Waiting for Kafka...';
          sleep 1;
        done;
        echo 'Creating topics...';
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic credential_creation --partitions 2 --replication-factor 1;
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic credential_update --partitions 2 --replication-factor 1;
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic credential_deletion --partitions 2 --replication-factor 1;
        echo 'Topics created successfully';
      "
    networks:
      - polypass-network

  statistics-service:
    build:
      context: ./statistics
      dockerfile: Dockerfile
    container_name: statistics-service
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_GROUP_ID=statistics-group
    depends_on:
      - kafka
      - kafka-topics
    networks:
      - polypass-network

  test-producer:
    build:
      context: ./testing/statistics
      dockerfile: Dockerfile
    container_name: test-producer
    depends_on:
      - kafka
      - kafka-topics
    environment:
      - KAFKA_BROKERS=kafka:29092
    networks:
      - polypass-network

volumes:
  kafka-data:
    driver: local

networks:
  polypass-network:
    driver: bridge 